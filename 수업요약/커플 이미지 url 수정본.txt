  public List<String> searchNickName(String coupleName) {
        Optional<CoupleEntity> couple = coupleRepository.findByCoupleName(coupleName);

        if (couple.isPresent()) {
            CoupleEntity coupleEntity = couple.get();
            return List.of(coupleEntity.getFirstEmail(), coupleEntity.getSecondEmail());
        } else {
            throw new IllegalArgumentException("Couple with name " + coupleName + " not found");
        }
    }


 // 커플 이름으로 커플 검색
        Optional<CoupleEntity> coupleEntityOpt = coupleRepository.findByCoupleName(coupleName);
        if (coupleEntityOpt.isPresent()) {
            CoupleEntity coupleEntity = coupleEntityOpt.get();
            String firstEmail = coupleEntity.getFirstEmail();
            String secondEmail = coupleEntity.getSecondEmail();

            // 일치하는 email이 존재 하지 않을 경우
            if (!firstEmail.equals(email)&&!secondEmail.equals(email)){
                Optional<MemberEntity> memberFirstEntityOpt = memberRepository.findByEmail(firstEmail);
                Optional<MemberEntity> memberSecondEntityOpt = memberRepository.findByEmail(secondEmail);
                list.add(memberFirstEntityOpt.get().getProfileImgUrl());
                list.add(memberSecondEntityOpt.get().getProfileImgUrl());

            }

        }