
// 쓰레드 상태제어
쓰레드 생성 -> 실행대기(운영체제가 실행시켜 주기 때문에 대기해야 한다.)
/일시정지
- sleep() : 잠시 몇초 잠재운다(일시정지) -> interrupt() {깨워 주는 명령어}
- wait() : 잠시 일시정지 -> notify(),notifyAll()
- join() : 일이 끝날때 까지 일시정지 -> interrupt

// 함수형 프로그래밍 = 수학공식
(자바에 함수가 없는 이유 : 메소드가 있기 때문에)
 - 사용해야 하는 이유 : 누가 코딩을 해도 똑같다!!

/ 함수형 프로그래밍의 정의(Java 보다 React에서 많이 사용)
1. 불변성 : 변수의 값이 바꾸면 안된다(final)(값의 비교를 간단하게 하기 위해서)
2. 함수의 일급 객체 : (매개)변수의 자리에 함수가 들어 갈 수 있다.
3. 순수 함수 : 외부의 환경에 변화하지 않은 함수
4. 재귀* : 반복문 대신 재귀를 사용한다. 

/ 람다(lambda) 문법(함수형 프로그램이랑 유사하지만 함수형 프로그램은 아니다)
- 람다의 철학 : 생략 가능한 모든 걸 생략하겠다.(수학공식으로 생각)
# 익명함수 : 일회용 함수 (간결하게 만들어야 한다.)
- 표기방법 : (매개변수목록) ->{실행문;} // (->를 이용한다)

/ 메소드참조 : 메소드를 참조해서 매개변수의 정보 및
타입을 알아내 불필요한 매개변수 제거(난이도가 있음)


